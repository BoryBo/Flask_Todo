services:
  server:
    container_name: server
    build:
      context: ./server
      dockerfile: Dockerfile

    ports:
      - "8000:8000"
    depends_on:
      db:
        condition: service_healthy
    networks:
      - todo_net
    secrets:
      - postgres_user
      - postgres_password
    environment:
      POSTGRES_DB: db
      POSTGRES_PORT: 5432
      POSTGRES_USER_FILE: /run/secrets/postgres_user
      POSTGRES_PASSWORD_FILE: /run/secrets/postgres_password

  db:
    container_name: db
    image: postgres:14
    restart: always
    secrets:
      - postgres_user
      - postgres_password
    environment:
      POSTGRES_USER_FILE: /run/secrets/postgres_user
      PGUSER: todo_db_user
      POSTGRES_PASSWORD_FILE: /run/secrets/postgres_password
    ports:
      - 5432:5432
    volumes:
      - pg_data:/var/lib/postgresql/data
    networks:
      - todo_net
    healthcheck:
      test:
        ["CMD-SHELL", "pg_isready -d db -U $(cat /run/secrets/postgres_user)"]
      interval: 10s
      timeout: 5s
      retries: 5

networks:
  todo_net:

volumes:
  pg_data:

secrets:
  postgres_user:
    file: ./secrets/postgres_user.txt
  postgres_password:
    file: ./secrets/postgres_password.txt
  db_connection:
    file: ./secrets/db_connection.txt
